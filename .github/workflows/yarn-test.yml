name: Yarn install, eslint, prettier and optionally publish and/or test with coverage

on:
  push:

jobs:
  yarn-check-lint-prettier-test-publish:
    runs-on: ubuntu-latest
    env:
      CI: true
      NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js with yarn cache
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: 'yarn'
          cache-dependency-path: vue-test/yarn.lock

      - name: Install dependencies
        working-directory: vue-test
        run: yarn install --immutable

      - name: Check for outdated dependencies
        working-directory: vue-test
        continue-on-error: true
        run: |
          OUTDATED_CHECK=$(yarn run ncu 2>&1)
          echo "$OUTDATED_CHECK"
          if [[ $(echo "$OUTDATED_CHECK" | tail -n 1) != "All dependencies match the latest package versions :)" ]]; then
            echo "<h1>:arrow_heading_up: Outdated dependencies found </h1>" >> $GITHUB_STEP_SUMMARY
            echo "It is recommended to run 'yarn run ncu -u' for fast and non-interactive upgrades \
              or 'yarn upgrade-interactive' to manually select upgrades</h3>" >> $GITHUB_STEP_SUMMARY
            echo "<details>" >> $GITHUB_STEP_SUMMARY
            echo "$OUTDATED_CHECK" | tail -n +3 | head -n -1 >> $GITHUB_STEP_SUMMARY
            echo "</details>" >> $GITHUB_STEP_SUMMARY
            echo "::warning:: outdated dependencies detected"
          fi

      - name: Yarn lint
        working-directory: vue-test
        run: yarn lint

      - name: Yarn prettier check
        working-directory: vue-test
        run: yarn prettier --check "{json-server,src}/**/*.{js,vue,json,html,css,md}"

      - name: Yarn tests with coverage
        working-directory: vue-test
        run: yarn test:coverage

      - name: Show coverage report sumamry in the job summary
        working-directory: vue-test
        run: |
            sed -n '/<table class="coverage-summary">/,/<\/table>/p' coverage/index.html >> test.html
            echo "<h1>Coverage report</h1>" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            cat test.html >> $GITHUB_STEP_SUMMARY

      - name: Archive 'coverage.xml' report
        uses: actions/upload-artifact@v4
        with:
          name: coverage.xml
          path: vue-test/coverage/clover.xml
          if-no-files-found: 'error'