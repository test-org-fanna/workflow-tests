# Repowered analysis step 1 (ref: README.MD)
name: Step 1 - Docker; tag, build and push

on:
  #  workflow_dispatch:
  push:
    branches:
      - dev
      - pre-release/**
      - release/**
      - hotfix/**
      - main
concurrency: production

jobs:
  generate-tag:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      tag: ${{ steps.github-tag.outputs.tag }}
    steps:
      # Checkout the repository with all commit history
      - name: Checkout ${{ github.repository }}
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'

      # Automatically bump and tag with the latest SemVer formatted version.
      - name: Generate and push GitHub tag
        id: github-tag
        uses: anothrNick/github-tag-action@1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          PRERELEASE: true
          DRY_RUN: true #TEMP

  build-and-push:
    runs-on: ubuntu-latest
    needs: generate-tag
    # This strategy enables to tag, build and push multiple Dockerfiles
    strategy:
      matrix:
        # Add your Dockerfile name(s) in the list below
        #   They always have to start with 'Dockerfile' -> wrong: foo.Dockerfile, correct: Dockerfile.foo
        #   Standard use is just 'Dockerfile'
        dockerfile: [ Dockerfile, Dockerfile.name ]
        # Add secrets (if any) in a secure way to a specific Dockerfile using the structure below:
        include:
          - dockerfile: Dockerfile
            first: FIRST_ENV
            second: SECOND_ENV
# #WORKS
#            file_secrets: "|
#              FIRST_ENV=${{ vars.FIRST_TEST }}
#              SECOND_ENV=${{ vars.SECOND_TEST }}"
# #NOT ALLOWED
#            file_secrets: "|
#              FIRST_ENV=${{ secrets.FIRST_ENV }}
#              SECOND_ENV=${{ secrets.SECOND_ENV }}"
    steps:
      - name: output dockerfile with vars or secrets
        env:
          FILE: ${{ matrix.dockerfile }}
          FIRST_ENV: ${{ secrets[matrix.first] }}
          TOTAL_ENV: "|
              FIRST_ENV=${{ secrets[matrix.first] }}
              SECOND_ENV=${{ secrets[matrix.second] }}"
        run: echo ${{ env.FIRST_ENV }} ${{ env.TOTAL_ENV }}
      # Sets the docker image tag according to the file system structure of Dockerhub with versioning
      # Examples:
      # - standard Dockerfile: thehubusername/repositoryfoobar:v1.0.1.beta.3
      # - with name (i.e. Dockerfile.foobar): thehubusername/repositoryfoobar-helloworld:v1.0.1.beta.3
      # - Repowered example: repowered/platform-django:v1.0.1.beta.3
#      - name: Set docker image tag for '${{ matrix.dockerfile }}'
#        env:
#          hub_repo: ${{ vars.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}
#        run: |
#          DOCKERFILE=${{ matrix.dockerfile }}
#          DOCKERFILE_NAME=$(echo $DOCKERFILE | sed 's/Dockerfile./-/;s/Dockerfile//')
#          echo "IMAGE_TAG=${{ env.hub_repo }}${DOCKERFILE_NAME}:${{ needs.generate-tag.outputs.tag }}" >> $GITHUB_ENV

      #  Log in to the desired docker hub space
#      - name: Login to Docker Hub
#        uses: docker/login-action@v3
#        with:
#          username: ${ { vars.DOCKER_HUB_USERNAME } }
#          password: ${ { secrets.DOCKER_HUB_ACCESS_TOKEN } }

      # Build the Dockerfile(s) with the image tag in the correct format and push to the hub
#      - name: Build ${{ matrix.dockerfile }} and push with tag
#        uses: docker/build-push-action@v6
#        with:
#          context: .
#          file: ${{ matrix.dockerfile }}
#          push: ${{ github.event_name == 'pull_request' }} #TEMPORARILY so no push
#          tags: ${{ env.IMAGE_TAG }}
#          secrets: ${{ matrix.secrets }}
