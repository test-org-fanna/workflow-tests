# Repowered analysis step 1 (ref: README.MD)
name: Step 1 - Docker; tag, build and push

on:
  #  workflow_dispatch:
  push:
    branches:
      - dev
      - pre-release/**
      - release/**
      - hotfix/**
      - main
concurrency: production

jobs:
  generate-tag:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      tag: $${{ steps.github-tag.outputs.tag }}
    steps:
      # Checkout the repository with all commit history with reference to the PR it comes from
      - name: Checkout ${{ github.repository }}
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'

      # Automatically bump and tag with the latest SemVer formatted version.
      - name: Generate and push GitHub tag
        id: github-tag
        uses: anothrNick/github-tag-action@1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          PRERELEASE: true
          DRY_RUN: true

  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: generate-tag
    # This strategy enables to tag, build and push multiple Dockerfiles
    strategy:
      matrix:
        # Add your Dockerfile name(s) in the list below
        #   They always have to start with 'Dockerfile' -> wrong: foo.Dockerfile, correct: Dockerfile.foo
        #   Standard use is just 'Dockerfile'
        dockerfile: [ Dockerfile, Dockerfile.name-test ]
    #        # Add secrets (if any) in a secure way to a specific Dockerfile using the structure below:
    #        include:
    #          - dockerfile: Dockerfile
    #            secrets: |
    #              FIRST_ENV=${{ secrets.FIRST_ENV }}
    #              SECOND_ENV=${{ secrets.SECOND_ENV }}
    steps:
      # Sets the docker image tag according to the file system structure of Dockerhub with versioning
      # Examples:
      # - standard Dockerfile: thehubusername/repositoryfoobar:v1.0.1.beta.3
      # - with name (i.e. Dockerfile.foobar): thehubusername/repositoryfoobar-helloworld:v1.0.1.beta.3
      # - Repowered example: repowered/platform-django:v1.0.1.beta.3
#      - name: test ${{ matrix.dockerfile }}
#        env:
#          hub_repo: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}
#          tag: ${{ needs.generate-tag.outputs.tag }}
#        run: |
#          DOCKERFILE=${{ matrix.dockerfile }}
#          DOCKERFILE_NAME=$(echo $DOCKERFILE | sed 's/Dockerfile\|Dockerfile.//')
#          echo IMAGE_TAG=${{ env.hub_repo }}-${DOCKERFILE_NAME}:${{ env.tag }} >> GITHUB_ENV

      - name: dockerfile name
        run: |
          DOCKERFILE=${{ matrix.dockerfile }}
          DOCKERFILE_NAME=$(echo $DOCKERFILE | sed 's/Dockerfile\|Dockerfile.//') 
          echo DOCKERFILE_NAME=${DOCKERFILE_NAME} >> GITHUB_ENV

      - name: test it ${{ env.DOCKERFILE_NAME }}
        run: echo ${{ env.DOCKERFILE_NAME }}

      - name: test it ${DOCKERFILE_NAME}
        run: echo ${DOCKERFILE_NAME}

      - name: test it $DOCKERFILE_NAME
        run: echo $DOCKERFILE_NAME

      #  Log in to the private Repowered docker hub space
#      - name: Login to Docker Hub
#        uses: docker/login-action@v3
#        with:
#          username: ${ { secrets.DOCKER_HUB_USERNAME } }
#          password: ${ { secrets.DOCKER_HUB_ACCESS_TOKEN } }
#
#      # Build the Dockerfile(s) with the image tag in the correct format and pushes them to the hub
#      - name: Build ${{ matrix.dockerfile }} and push with tag
#        needs: generate-tag
#        uses: docker/build-push-action@v6
#        env:
#          TAG: ${{ needs.generate-tag.outputs.tag }}
#          DOCKER_NAME:
#          IMAGE_TAG: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:${{ env.TAG }}
#        with:
#          context: .
#          file: ${{ matrix.dockerfile }}
#          push: ${{ github.event_name != 'pull_request' }}
#          tags: $IMAGE_TAG
#          secrets: ${{ matrix.secrets }}
